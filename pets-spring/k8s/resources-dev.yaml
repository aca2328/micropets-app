---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: service-discovery-client
rules:
  - apiGroups: [""] # "" indicates the core API group
    resources: ["services", "pods", "configmaps", "endpoints"]
    verbs: ["get", "watch", "list"]
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: default
  name: namespace-reader
rules:
  - apiGroups: ["", "extensions", "apps"]
    resources: ["configmaps", "pods", "services", "endpoints", "secrets"]
    verbs: ["get", "list", "watch"]

---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: namespace-reader-binding
  namespace: default
subjects:
  - kind: ServiceAccount
    name: default
    apiGroup: ""
roleRef:
  kind: Role
  name: namespace-reader
  apiGroup: ""
---
apiVersion: v1
kind: Secret
metadata:
  name: pets-spring-db-credentials
type: Opaque
data:
  user: YWRtaW4K
  password: cGxlYXNlY2hhbmdlbWU=
---
kind: Deployment
apiVersion: apps/v1
metadata:  
  name: pets-spring-app
  labels:
    app: pets-spring-app
    group: micro-pet
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pets-spring-app
      group: micro-pet
  template:
    metadata:
      labels:
        app: pets-spring-app
        group: micro-pet
    spec:
      containers:
        - name: pets
          image: registry.local:5000/micropet/pets-spring:latest
          imagePullPolicy: Always
          ports:
            - name: pets
              containerPort: 8081
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: pets-spring-service
  labels:
    app: pets-spring-app
    group: micro-pet
spec:
  ports:
    - protocol: TCP
      name: pets
      port: 8081
  selector:
    app: pets-spring-app
    group: micro-pet
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: pets-ingress  
spec:
  entryPoints:
    - web
    - websecure
  routes:
  - match: Host(`pets-spring.dev.pet-cluster.demo`)
    kind: Rule
    services:
    - name: pets-spring-service
      port: 8081

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pets-spring
data:
  application.properties: |-
    myconfig.backends[0].name=cats
    myconfig.backends[0].url=cats-service
    myconfig.backends[1].name=dogs
    myconfig.backends[1].url=dogs-service
    myconfig.backends[2].name=fishes
    myconfig.backends[2].url=fishes-service
    myconfig.useServiceDiscovery = true


